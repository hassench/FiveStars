@model Entities.Models.Point

@{var lastNum = ViewBag.lastNum;}
@using (Html.BeginForm("AddPointToTheme", "Points", Model.theme.ThemeId))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Point</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.NumPoint, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.NumPoint, new { htmlAttributes = new { @class = "form-control" } })*@
                @{Model.NumPoint = lastNum + 1;}
                @Html.HiddenFor(model => model.NumPoint @*,htmlAttributes: { value = 5}*@)
                @Html.ValidationMessageFor(model => model.NumPoint, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomPoint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomPoint, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomPoint, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Coef, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Coef, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Coef, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.theme.ThemeId)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
